apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.db.label }}
  labels:
    app: {{ .Values.db.label }}
spec:
  serviceName: {{ .Values.service.db.name }}
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.db.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.label }}
    spec:
      containers:
        - name: db-container
          image: "{{ .Values.db.image }}:{{ .Values.db.imageVersion }}"
          env:
{{ .Values.db.env | toYaml | indent 12 }}
          ports:
            - name: dbport
              containerPort: {{ .Values.db.containerPort }}
          resources:
            requests:
              cpu: {{ .Values.db.resources.requests.cpu | quote }}
              memory: {{ .Values.db.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.db.resources.limits.cpu | quote }}
              memory: {{ .Values.db.resources.limits.memory | quote }}
          livenessProbe:
            tcpSocket:
              port: dbport
          readinessProbe:
            tcpSocket:
              port: dbport
          startupProbe:
            tcpSocket:
              port: dbport
          {{- if .Values.db.volume.enabled }}
          volumeMounts:
            - name: {{ .Values.db.volume.name }}
              mountPath: {{ .Values.db.volume.mountPath }}
          {{- end }}
  {{- if .Values.db.volume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.db.volume.name }}
      spec:
        accessModes: {{ .Values.db.volume.accessModes }}
        storageClassName: {{ .Values.db.volume.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.db.volume.size }}
  {{- end }}
